/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package gui;

import dao.CongDoan_DAO;
import dao.SanPham_DAO;
import entity.SanPham;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.time.LocalDate;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import java.sql.Date;
import java.time.ZoneId;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import java.time.format.DateTimeFormatter;
import java.util.Calendar;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

/**
 *
 * @author admin
 */
public class pnTaoSanPham_GUI extends javax.swing.JPanel {

    /**
     * Creates new form pnChucNang_GUI
     */
    private SanPham_DAO sanPham_DAO;
    private CongDoan_DAO congDoan_DAO;
    private DefaultTableModel tModel;

    public pnTaoSanPham_GUI() {
        initComponents();
        moKhoaTextfields(false);
        txtMaSanPham.setEnabled(false);
        btnLưu.setEnabled(false);
        cboTrangThai.setEnabled(false);

        sanPham_DAO = new SanPham_DAO();
        congDoan_DAO = new CongDoan_DAO();

        docDLVaoTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnThongTin = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtMaSanPham = new javax.swing.JTextField();
        txtTenSanPham = new javax.swing.JTextField();
        txtSoCongDoan = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        dateChooserNgayHoanThanh = new datechooser.beans.DateChooserCombo();
        dateChooserNgayBatDau = new datechooser.beans.DateChooserCombo();
        cboTrangThai = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        txtSoLuong = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableSP = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        btnThem = new javax.swing.JButton();
        btnLưu = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnThoat = new javax.swing.JButton();
        lbl_img = new javax.swing.JLabel();
        lblTimMa = new javax.swing.JLabel();
        txtTimMa = new javax.swing.JTextField();

        setBackground(new java.awt.Color(209, 209, 209));
        setToolTipText("");

        pnThongTin.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin sản phẩm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Mã sản phẩm:");
        jLabel1.setPreferredSize(new java.awt.Dimension(96, 20));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Tên sản phẩm:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Số công đoạn:");

        txtMaSanPham.setEditable(false);
        txtMaSanPham.setPreferredSize(new java.awt.Dimension(64, 30));

        txtTenSanPham.setPreferredSize(new java.awt.Dimension(64, 30));

        txtSoCongDoan.setPreferredSize(new java.awt.Dimension(64, 30));
        txtSoCongDoan.addKeyListener(new KeyAdapter() {
            public void keyTyped(KeyEvent e) {
                char c = e.getKeyChar();
                if (((c < '0') || (c > '9')) && (c != KeyEvent.VK_BACK_SPACE)) {
                    e.consume(); // if it's not a number, ignore the event
                }
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Ngày bắt đầu:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Ngày hoàn thành:");

        dateChooserNgayHoanThanh.setCurrentView(new datechooser.view.appearance.AppearancesList("custom",
            new datechooser.view.appearance.ViewAppearance("custom",
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Segoe UI", java.awt.Font.PLAIN, 12),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Segoe UI", java.awt.Font.PLAIN, 12),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    true,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Segoe UI", java.awt.Font.PLAIN, 12),
                    new java.awt.Color(0, 0, 255),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Segoe UI", java.awt.Font.PLAIN, 12),
                    new java.awt.Color(128, 128, 128),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Segoe UI", java.awt.Font.PLAIN, 12),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Segoe UI", java.awt.Font.PLAIN, 12),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(255, 0, 0),
                    false,
                    false,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                (datechooser.view.BackRenderer)null,
                false,
                true)));
    dateChooserNgayHoanThanh.setCalendarPreferredSize(new java.awt.Dimension(320, 200));
    dateChooserNgayHoanThanh.setLocale(new java.util.Locale("vi", "VN", ""));

    dateChooserNgayBatDau.setCurrentView(new datechooser.view.appearance.AppearancesList("custom",
        new datechooser.view.appearance.ViewAppearance("custom",
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Segoe UI", java.awt.Font.PLAIN, 12),
                new java.awt.Color(0, 0, 0),
                new java.awt.Color(0, 0, 255),
                false,
                true,
                new datechooser.view.appearance.swing.ButtonPainter()),
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Segoe UI", java.awt.Font.PLAIN, 12),
                new java.awt.Color(0, 0, 0),
                new java.awt.Color(0, 0, 255),
                true,
                true,
                new datechooser.view.appearance.swing.ButtonPainter()),
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Segoe UI", java.awt.Font.PLAIN, 12),
                new java.awt.Color(0, 0, 255),
                new java.awt.Color(0, 0, 255),
                false,
                true,
                new datechooser.view.appearance.swing.ButtonPainter()),
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Segoe UI", java.awt.Font.PLAIN, 12),
                new java.awt.Color(128, 128, 128),
                new java.awt.Color(0, 0, 255),
                false,
                true,
                new datechooser.view.appearance.swing.LabelPainter()),
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Segoe UI", java.awt.Font.PLAIN, 12),
                new java.awt.Color(0, 0, 0),
                new java.awt.Color(0, 0, 255),
                false,
                true,
                new datechooser.view.appearance.swing.LabelPainter()),
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Segoe UI", java.awt.Font.PLAIN, 12),
                new java.awt.Color(0, 0, 0),
                new java.awt.Color(255, 0, 0),
                false,
                false,
                new datechooser.view.appearance.swing.ButtonPainter()),
            (datechooser.view.BackRenderer)null,
            false,
            true)));
dateChooserNgayBatDau.setCalendarPreferredSize(new java.awt.Dimension(322, 200));
dateChooserNgayBatDau.setLocale(new java.util.Locale("vi", "VN", ""));

cboTrangThai.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chưa hoàn thành", "Hoàn thành" }));

jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
jLabel7.setText("Số lượng:");

jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
jLabel8.setText("Trạng thái:");

javax.swing.GroupLayout pnThongTinLayout = new javax.swing.GroupLayout(pnThongTin);
pnThongTin.setLayout(pnThongTinLayout);
pnThongTinLayout.setHorizontalGroup(
    pnThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
    .addGroup(pnThongTinLayout.createSequentialGroup()
        .addContainerGap()
        .addGroup(pnThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnThongTinLayout.createSequentialGroup()
                .addGroup(pnThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel2)
                        .addComponent(txtTenSanPham, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addComponent(txtMaSanPham, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(txtSoCongDoan, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(pnThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dateChooserNgayBatDau, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateChooserNgayHoanThanh, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGroup(pnThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnThongTinLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(pnThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnThongTinLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(cboTrangThai, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))))
            .addGroup(pnThongTinLayout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(126, 126, 126)
                .addComponent(jLabel4)))
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    pnThongTinLayout.setVerticalGroup(
        pnThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(pnThongTinLayout.createSequentialGroup()
            .addGroup(pnThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel4)
                .addComponent(jLabel7))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(pnThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnThongTinLayout.createSequentialGroup()
                    .addComponent(dateChooserNgayBatDau, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jLabel5))
                .addGroup(pnThongTinLayout.createSequentialGroup()
                    .addGroup(pnThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(dateChooserNgayHoanThanh, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(pnThongTinLayout.createSequentialGroup()
                            .addComponent(txtMaSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtTenSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnThongTinLayout.createSequentialGroup()
                            .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel8)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cboTrangThai, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jLabel3)))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
            .addComponent(txtSoCongDoan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(29, 29, 29))
    );

    txtSoLuong.addKeyListener(new KeyAdapter() {
        public void keyTyped(KeyEvent e) {
            char c = e.getKeyChar();
            if (((c < '0') || (c > '9')) && (c != KeyEvent.VK_BACK_SPACE)) {
                e.consume(); // if it's not a number, ignore the event
            }
        }
    });

    tModel = new DefaultTableModel(new String [] {
        "Mã sản phẩm", "Tên sản phẩm", "Ngày bắt đầu", "Ngày hoàn thành", "Số lượng",  "Số công đoạn", "Trạng thái"
    } , 0){
        boolean[] canEdit = new boolean[]{
            false, false, false, false, false, false,false
        };

        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit[columnIndex];
        }
    };
    tableSP.setModel(tModel);
    tableSP.setRowHeight(25);
    tableSP.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            tableSPMouseClicked(evt);
        }
    });
    jScrollPane1.setViewportView(tableSP);

    jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
    jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel10.setText("Tạo Sản Phẩm");

    btnThem.setBackground(new java.awt.Color(255, 204, 204));
    btnThem.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
    btnThem.setText("Thêm");
    btnThem.setMaximumSize(new java.awt.Dimension(106, 30));
    btnThem.setMinimumSize(new java.awt.Dimension(106, 30));
    btnThem.setPreferredSize(new java.awt.Dimension(106, 30));
    btnThem.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnThemActionPerformed(evt);
        }
    });

    btnLưu.setBackground(new java.awt.Color(255, 204, 204));
    btnLưu.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
    btnLưu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/diskette.png"))); // NOI18N
    btnLưu.setText("Lưu");
    btnLưu.setPreferredSize(new java.awt.Dimension(96, 30));
    btnLưu.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnLưuActionPerformed(evt);
        }
    });

    btnSua.setBackground(new java.awt.Color(255, 204, 204));
    btnSua.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
    btnSua.setText("Sửa");
    btnSua.setMaximumSize(new java.awt.Dimension(106, 30));
    btnSua.setMinimumSize(new java.awt.Dimension(106, 30));
    btnSua.setPreferredSize(new java.awt.Dimension(106, 30));
    btnSua.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnSuaActionPerformed(evt);
        }
    });

    btnXoa.setBackground(new java.awt.Color(0, 153, 0));
    btnXoa.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
    btnXoa.setText("Xóa");
    btnXoa.setMaximumSize(new java.awt.Dimension(106, 30));
    btnXoa.setMinimumSize(new java.awt.Dimension(106, 30));
    btnXoa.setPreferredSize(new java.awt.Dimension(106, 30));
    btnXoa.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnXoaActionPerformed(evt);
        }
    });

    btnThoat.setBackground(new java.awt.Color(0, 153, 0));
    btnThoat.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
    btnThoat.setText("Thoát");
    btnThoat.setMaximumSize(new java.awt.Dimension(106, 30));
    btnThoat.setMinimumSize(new java.awt.Dimension(106, 30));
    btnThoat.setPreferredSize(new java.awt.Dimension(106, 30));
    btnThoat.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnThoatActionPerformed(evt);
        }
    });

    lbl_img.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/bg_DangNhap.jpg"))); // NOI18N
    lbl_img.setMaximumSize(new java.awt.Dimension(420, 248));
    lbl_img.setMinimumSize(new java.awt.Dimension(420, 248));
    lbl_img.setPreferredSize(new java.awt.Dimension(420, 248));

    lblTimMa.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
    lblTimMa.setText("Tìm kiếm mã sản phẩm:");

    txtTimMa.setToolTipText("");
    txtTimMa.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyReleased(java.awt.event.KeyEvent evt) {
            txtTimMaKeyReleased(evt);
        }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addGap(518, 518, 518)
            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGap(540, 540, 540))
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(btnThoat, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(106, 106, 106))
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(lblTimMa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTimMa, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1270, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnThongTin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnLưu, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(46, 46, 46)
                        .addComponent(lbl_img, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 21, Short.MAX_VALUE)))
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addGap(6, 6, 6)
            .addComponent(jLabel10)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(86, 86, 86)
                    .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(btnLưu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(pnThongTin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lbl_img, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addGap(12, 12, 12)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(lblTimMa, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(txtTimMa, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(5, 5, 5)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(btnThoat, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addContainerGap(44, Short.MAX_VALUE))
    );
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        if (btnThem.getText().trim().equalsIgnoreCase("Thêm")) {
            moKhoaTextfields(true);
            moKhoaControls(false);
            btnLưu.setEnabled(true);
            btnThem.setEnabled(true);
            btnThem.setText("Hủy");
            xoaTrang();
            Calendar ngay = Calendar.getInstance();
            ngay.setTime(convertToDateViaInstant(LocalDate.now()));
            dateChooserNgayBatDau.setSelectedDate(ngay);
            ngay.setTime(convertToDateViaInstant(LocalDate.now()));
            dateChooserNgayHoanThanh.setSelectedDate(ngay);
            txtMaSanPham.setText(taoMaMoi());
            tableSP.clearSelection();
            tableSP.setEnabled(false);
        } else if (btnThem.getText().trim().equalsIgnoreCase("Hủy")) {
            moKhoaTextfields(false);
            moKhoaControls(true);
            btnLưu.setEnabled(false);
            btnThem.setText("Thêm");
            xoaTrang();
            tableSP.setEnabled(true);
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnLưuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLưuActionPerformed
        if (btnThem.getText().trim().equalsIgnoreCase("Hủy")) {
            if (themSanPham()) {
                moKhoaTextfields(false);
                moKhoaControls(true);
                btnLưu.setEnabled(false);
                btnThem.setText("Thêm");
            }
        }
        if (btnSua.getText().trim().equalsIgnoreCase("Hủy")) {
            if (suaSanPham()) {
                moKhoaTextfields(false);
                moKhoaControls(true);
                btnLưu.setEnabled(false);
                dateChooserNgayHoanThanh.setEnabled(false);
                btnSua.setText("Sửa");
            }
        }
    }//GEN-LAST:event_btnLưuActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        if (btnSua.getText().trim().equalsIgnoreCase("Sửa")) {
            int r = tableSP.getSelectedRow();
            if (r == -1) {
                sh_Mes("Chọn dòng cần sửa", null);
                return;
            }
            moKhoaTextfields(true);
            moKhoaControls(false);
            btnLưu.setEnabled(true);
            btnSua.setEnabled(true);
            dateChooserNgayHoanThanh.setEnabled(true);
            btnSua.setText("Hủy");
            xoaTrang();
            napDLVaoTF();
        } else if (btnSua.getText().trim().equalsIgnoreCase("Hủy")) {
            moKhoaTextfields(false);
            moKhoaControls(true);
            btnLưu.setEnabled(false);
            dateChooserNgayHoanThanh.setEnabled(false);
            btnSua.setText("Sửa");
            xoaTrang();
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        xoaSanPham();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void tableSPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableSPMouseClicked
        napDLVaoTF();
    }//GEN-LAST:event_tableSPMouseClicked

    private void btnThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThoatActionPerformed
        MenuChinh.getPnSlider().removeAll();
        MenuChinh.getPnSlider().repaint();
        MenuChinh.getPnSlider().revalidate();

        MenuChinh.getPnSlider().add(new pnManHinhChinh());
        MenuChinh.getPnSlider().repaint();
        MenuChinh.getPnSlider().revalidate();
    }//GEN-LAST:event_btnThoatActionPerformed

    private void txtTimMaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimMaKeyReleased
        timSanPham();
    }//GEN-LAST:event_txtTimMaKeyReleased

    private SanPham ktra_LayDL() {
        String maSP = txtMaSanPham.getText();
        String tenSP = txtTenSanPham.getText();
        LocalDate ngayBatDau = null;
        try {
            ngayBatDau = convertToLocalDateViaInstant(dateChooserNgayBatDau.getSelectedDate().getTime());
        } catch (Exception e) {
            sh_Mes("Chưa chọn ngày bắt đầu", null);
            return null;
        }
        LocalDate ngayHoanThanh = null;
        try {
            ngayHoanThanh = convertToLocalDateViaInstant(dateChooserNgayHoanThanh.getSelectedDate().getTime());
        } catch (Exception e) {
            sh_Mes("Chưa chọn ngày hoàn thành", null);
            return null;
        }

        String soLuong_S = txtSoLuong.getText();
        String soCongDoan_S = txtSoCongDoan.getText();
        boolean trangThai = (cboTrangThai.getSelectedIndex() == 0 ? false : true);
        if (tenSP.trim().equals("")) {
            sh_Mes("Tên sản phẩm trống", txtTenSanPham);
            return null;
        }

        if (!tenSP.matches("(\\p{L}|\\w|\\s)*")) {
            sh_Mes("Tên sản phẩm chứa kí tự đặc biệt", txtTenSanPham);
            return null;
        }

        if (soCongDoan_S.trim().equals("")) {
            sh_Mes("Số công đoạn trống", txtSoCongDoan);
            return null;
        }
        int soCD = Integer.parseInt(soCongDoan_S);
        if (soCD <= 0) {
            sh_Mes("Số công đoạn phải > 0", txtSoCongDoan);
            return null;
        }

        if (LocalDate.now().isAfter(ngayBatDau) && btnSua.getText().equalsIgnoreCase("Sửa")) {
            sh_Mes("Ngày bắt đầu không trước ngày hiện tại", null);
            return null;
        }

        if (ngayBatDau.isAfter(ngayHoanThanh)) {
            sh_Mes("Ngày hoàn thành không trước ngày bắt đầu", null);
            return null;
        }

        if (soLuong_S.trim().equals("")) {
            sh_Mes("Số lượng trống", txtSoLuong);
            return null;
        }
        int soLuong = Integer.parseInt(soLuong_S);
        if (soLuong <= 0) {
            sh_Mes("Số lượng phải > 0", txtSoLuong);
            return null;
        }

        return new SanPham(maSP, tenSP, ngayBatDau, ngayHoanThanh, soLuong, soCD, trangThai);
    }

    private boolean xoaSanPham() {
        int r = tableSP.getSelectedRow();
        if (r == -1) {
            sh_Mes("Chọn dòng cần xóa", null);
            return false;
        }
        int opt = JOptionPane.showConfirmDialog(null, "Xác nhận", "Muốn xóa", JOptionPane.YES_NO_OPTION);
        if (opt == JOptionPane.YES_OPTION) {
            sanPham_DAO.xoaSanPham(tModel.getValueAt(r, 0).toString());
            tModel.removeRow(r);
            xoaTrang();
            return true;
        }
        return false;
    }

    private boolean suaSanPham() {
        int r = tableSP.getSelectedRow();
        if (r == -1) {
            sh_Mes("Chọn dòng cần sửa", null);
            return false;
        }
        SanPham sp = ktra_LayDL();
        if (sp == null) {
            return false;
        }
        DateTimeFormatter fmt = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        if (sp.getSoLuong() > Integer.parseInt(tModel.getValueAt(r, 4).toString())) {
            congDoan_DAO.suaSoLuongCongDoan(sp.getMaSP(), sp.getSoLuong(), false);
            sanPham_DAO.capNhatTrangThaiSP(sp.getMaSP(), false);
        }
        tModel.removeRow(r);
        tModel.insertRow(r, new Object[]{sp.getMaSP(), sp.getTenSP(), fmt.format(sp.getNgayBatDau()), fmt.format(sp.getNgayHoanThanh()), sp.getSoLuong(), sp.getSoCongDoan(), (sp.isTrangThai() ? "Hoàn thành" : "Chưa hoàn thành")});
        sanPham_DAO.suaSanPham(sp);
        xoaTrang();
        sh_Mes("Sửa thành công", null);
        return true;
    }

    private boolean themSanPham() {
        SanPham sp = ktra_LayDL();
        if (sp == null) {
            return false;
        }
        DateTimeFormatter fmt = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        tModel.addRow(new Object[]{sp.getMaSP(), sp.getTenSP(), fmt.format(sp.getNgayBatDau()), fmt.format(sp.getNgayHoanThanh()), sp.getSoLuong(), sp.getSoCongDoan(), (sp.isTrangThai() ? "Hoàn thành" : "Chưa hoàn thành")});
        sanPham_DAO.themSanPham(sp);
        xoaTrang();
        sh_Mes("Thêm thành công", null);
        return true;
    }

    private void docDLVaoTable() {
        ArrayList<SanPham> dsSP = sanPham_DAO.getAllSanPham();
        DateTimeFormatter fmt = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        for (SanPham sp : dsSP) {
            tModel.addRow(new Object[]{sp.getMaSP(), sp.getTenSP(), fmt.format(sp.getNgayBatDau()), fmt.format(sp.getNgayHoanThanh()), sp.getSoLuong(), sp.getSoCongDoan(), (sp.isTrangThai() ? "Hoàn thành" : "Chưa hoàn thành")});
        }
    }

    private void timSanPham() {
        String maSP = txtTimMa.getText().trim();
        if (!maSP.trim().equals("")) {
            ArrayList<SanPham> dsSP = sanPham_DAO.getAllSanPham();
            xoaDLTrenTable();
            maSP = maSP.replace("*", ".+");
            maSP = maSP.replaceAll("\\s\\s+", " ");
            if (!maSP.matches(".*\\+.*")) {
                maSP = ".*" + maSP + ".*";
            }
            String regex = String.format("%s", maSP);
            Pattern mypattern = Pattern.compile(regex, (Pattern.UNICODE_CASE | Pattern.CASE_INSENSITIVE));
            Matcher mymatcher;
            DateTimeFormatter fmt = DateTimeFormatter.ofPattern("dd/MM/yyyy");
            for (SanPham sp : dsSP) {
                mymatcher = mypattern.matcher(sp.getMaSP());
                if (mymatcher.matches()) {
                    tModel.addRow(new Object[]{sp.getMaSP(), sp.getTenSP(), fmt.format(sp.getNgayBatDau()), fmt.format(sp.getNgayHoanThanh()), sp.getSoLuong(), sp.getSoCongDoan(), (sp.isTrangThai() ? "Hoàn thành" : "Chưa hoàn thành")});
                }
            }
        } else {
            xoaDLTrenTable();
            docDLVaoTable();
        }
    }

    private void moKhoaControls(boolean b) {
        btnThem.setEnabled(b);
        btnSua.setEnabled(b);
        btnLưu.setEnabled(b);
        btnXoa.setEnabled(b);
        btnThoat.setEnabled(b);
    }

    private void moKhoaTextfields(boolean b) {
        txtTenSanPham.setEnabled(b);
        txtSoCongDoan.setEnabled(b);
        dateChooserNgayBatDau.setEnabled(b);
        dateChooserNgayHoanThanh.setEnabled(b);
        txtSoLuong.setEnabled(b);
    }

    private void moKhoaDateChooser(boolean b) {
        dateChooserNgayBatDau.setEnabled(b);
        dateChooserNgayHoanThanh.setEnabled(b);
    }

    private void xoaTrang() {
        txtMaSanPham.setText("");
        txtTenSanPham.setText("");
        txtSoCongDoan.setText("");
        dateChooserNgayBatDau.setText("");
        dateChooserNgayHoanThanh.setText("");
        cboTrangThai.setSelectedIndex(0);
        txtSoLuong.setText("");
    }

    private void napDLVaoTF() {
        int r = tableSP.getSelectedRow();
        if (r == -1) {
            return;
        }
        txtMaSanPham.setText(tModel.getValueAt(r, 0).toString());
        txtTenSanPham.setText(tModel.getValueAt(r, 1).toString());
        DateTimeFormatter fmt = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        LocalDate ngayBD = LocalDate.parse(tModel.getValueAt(r, 2).toString(), fmt);
        LocalDate ngayHT = LocalDate.parse(tModel.getValueAt(r, 3).toString(), fmt);

        moKhoaDateChooser(true);
        Calendar ngay = Calendar.getInstance();
        ngay.setTime(convertToDateViaInstant(ngayBD));
        dateChooserNgayBatDau.setSelectedDate(ngay);

        ngay.setTime(convertToDateViaInstant(ngayHT));
        dateChooserNgayHoanThanh.setSelectedDate(ngay);
        if (btnSua.getText().equalsIgnoreCase("Sửa")) {
            moKhoaDateChooser(false);
        } else {
            dateChooserNgayBatDau.setEnabled(false);
        }

        txtSoLuong.setText(tModel.getValueAt(r, 4).toString());
        txtSoCongDoan.setText(tModel.getValueAt(r, 5).toString());
        cboTrangThai.setSelectedItem(tModel.getValueAt(r, 6).toString());

    }

    private void sh_Mes(String mes, JTextField txt) {
        JOptionPane.showMessageDialog(null, mes);
        if (txt == null) {
            return;
        }
        txt.requestFocus();
    }

    public LocalDate convertToLocalDateViaInstant(Date dateToConvert) {
        return dateToConvert.toInstant()
                .atZone(ZoneId.systemDefault())
                .toLocalDate();
    }

    public LocalDate convertToLocalDateViaInstant(java.util.Date dateToConvert) {
        return dateToConvert.toInstant()
                .atZone(ZoneId.systemDefault())
                .toLocalDate();
    }

    public java.util.Date convertToDateViaInstant(LocalDate date) {
        return Date.from(date.atStartOfDay().atZone(ZoneId.systemDefault()).toInstant());
    }

    private void xoaDLTrenTable() {
        DefaultTableModel model = (DefaultTableModel) tableSP.getModel();
        model.setRowCount(0);
    }

    public String taoMaMoi() {
        String maCuoi = null;
        try {
            maCuoi = sanPham_DAO.getMaNVCuoi().trim().substring(2);
        } catch (Exception e) {
            if (maCuoi == null) {
                return "SP0001";
            }
        }

        int ma = Integer.parseInt(maCuoi);
        String maMoi = String.format("SP%04d", ma + 1);
        return maMoi;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLưu;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnThoat;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cboTrangThai;
    private datechooser.beans.DateChooserCombo dateChooserNgayBatDau;
    private datechooser.beans.DateChooserCombo dateChooserNgayHoanThanh;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTimMa;
    private javax.swing.JLabel lbl_img;
    private javax.swing.JPanel pnThongTin;
    private javax.swing.JTable tableSP;
    private javax.swing.JTextField txtMaSanPham;
    private javax.swing.JTextField txtSoCongDoan;
    private javax.swing.JTextField txtSoLuong;
    private javax.swing.JTextField txtTenSanPham;
    private javax.swing.JTextField txtTimMa;
    // End of variables declaration//GEN-END:variables
}
