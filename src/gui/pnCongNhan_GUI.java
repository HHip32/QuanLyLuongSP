/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package gui;

import dao.CongNhan_DAO;
import dao.DiaChi_DAO;
import entity.CongNhan;
import entity.DiaChi;
import java.awt.Image;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
//import java.sql.Date;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author admin
 */
public class pnCongNhan_GUI extends javax.swing.JPanel {

    /**
     * Creates new form pnCongNhan_GUI
     */
    private DefaultTableModel model;
    private String filename = null;
    private byte[] person_img = null;
    private CongNhan_DAO congNhan_DAO = new CongNhan_DAO();
    private DiaChi_DAO diaChi_DAO = new DiaChi_DAO();
    public ArrayList<CongNhan> listCongNhan = new ArrayList<>();

    public pnCongNhan_GUI() {
        initComponents();
        model = (DefaultTableModel) table.getModel();
        table.setRowHeight(20);
        listCongNhan = congNhan_DAO.getAllCongNhan();
        ArrayList<String> tinhTP = diaChi_DAO.getTinhTP();
        for (String dc : tinhTP) {
            cboTinhQQ.addItem(dc);
            cboTinhDC.addItem(dc);
        }
        clearTable();
        loadTableArrayList(congNhan_DAO.getAllCongNhanConLam());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelChucNang = new javax.swing.JPanel();
        btnThem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoaTrang = new javax.swing.JButton();
        btnThoat = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        txtTim = new javax.swing.JTextField();
        btnLuu = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        cboTrangThai = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        lbl_img = new javax.swing.JLabel();
        btnChonAnh = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtMaCN = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtHoTen = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        cboGioiTinh = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        txtCMND = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtSDT = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        dateChooserNgaySinh = new datechooser.beans.DateChooserCombo();
        jLabel10 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        dateChooserNgayVaoLam = new datechooser.beans.DateChooserCombo();
        jLabel4 = new javax.swing.JLabel();
        txtPhuCap = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        chkBHXH = new javax.swing.JCheckBox();
        jPanel4 = new javax.swing.JPanel();
        cboTinhQQ = new javax.swing.JComboBox<>();
        cboHuyenQQ = new javax.swing.JComboBox<>();
        cboXaQQ = new javax.swing.JComboBox<>();
        jPanel5 = new javax.swing.JPanel();
        cboTinhDC = new javax.swing.JComboBox<>();
        cboHuyenDC = new javax.swing.JComboBox<>();
        cboXaDC = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        txtLuongThamNien = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(209, 209, 209));

        panelChucNang.setBorder(javax.swing.BorderFactory.createTitledBorder("Chức năng"));

        btnThem.setBackground(new java.awt.Color(255, 204, 204));
        btnThem.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/add-user.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.setPreferredSize(new java.awt.Dimension(110, 30));
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnXoa.setBackground(new java.awt.Color(255, 204, 204));
        btnXoa.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/delete-user.png"))); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.setMaximumSize(new java.awt.Dimension(110, 30));
        btnXoa.setPreferredSize(new java.awt.Dimension(110, 30));
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnSua.setBackground(new java.awt.Color(255, 204, 204));
        btnSua.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/editing.png"))); // NOI18N
        btnSua.setText("Sửa");
        btnSua.setPreferredSize(new java.awt.Dimension(110, 30));
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoaTrang.setBackground(new java.awt.Color(255, 204, 204));
        btnXoaTrang.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        btnXoaTrang.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/eraser.png"))); // NOI18N
        btnXoaTrang.setText("Xóa trắng");
        btnXoaTrang.setEnabled(false);
        btnXoaTrang.setPreferredSize(new java.awt.Dimension(110, 30));
        btnXoaTrang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaTrangActionPerformed(evt);
            }
        });

        btnThoat.setBackground(new java.awt.Color(255, 204, 204));
        btnThoat.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        btnThoat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/logout.png"))); // NOI18N
        btnThoat.setText("Thoát");
        btnThoat.setMaximumSize(new java.awt.Dimension(110, 30));
        btnThoat.setPreferredSize(new java.awt.Dimension(110, 30));

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel15.setText("Tìm kiếm:");

        txtTim.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKeyReleased(evt);
            }
        });

        btnLuu.setBackground(new java.awt.Color(255, 204, 204));
        btnLuu.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        btnLuu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/diskette.png"))); // NOI18N
        btnLuu.setText("Lưu");
        btnLuu.setEnabled(false);
        btnLuu.setMaximumSize(new java.awt.Dimension(110, 30));
        btnLuu.setPreferredSize(new java.awt.Dimension(110, 30));
        btnLuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuuActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel12.setText("Trạng thái:");

        cboTrangThai.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        cboTrangThai.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Đang làm", "Nghỉ việc" }));
        cboTrangThai.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboTrangThaiItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout panelChucNangLayout = new javax.swing.GroupLayout(panelChucNang);
        panelChucNang.setLayout(panelChucNangLayout);
        panelChucNangLayout.setHorizontalGroup(
            panelChucNangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelChucNangLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnLuu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnXoaTrang, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addComponent(btnThoat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTim, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cboTrangThai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(7, Short.MAX_VALUE))
        );
        panelChucNangLayout.setVerticalGroup(
            panelChucNangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelChucNangLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelChucNangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelChucNangLayout.createSequentialGroup()
                        .addGroup(panelChucNangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panelChucNangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnLuu, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelChucNangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnThoat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnXoaTrang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelChucNangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtTim, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel12)
                        .addComponent(cboTrangThai, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        String[] heads= {"Mã công nhân", "Họ và tên", "Giới tính", "CMND", "SĐT", "Ngày sinh", "Email", "Ngày vào làm", "Phụ cấp", "BHXH", "Quê quán", "Địa chỉ"};
        model = new DefaultTableModel(heads, 0);
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã công nhân", "Họ và tên", "Giới tính", "CMND", "SĐT", "Ngày sinh", "Email", "Ngày vào làm", "Phụ cấp", "BHXH", "Quê quán", "Địa chỉ"
            }
        ));
        table.setShowGrid(true);
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin công nhân", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 13))); // NOI18N

        btnChonAnh.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        btnChonAnh.setText("Chọn ảnh");
        btnChonAnh.setEnabled(false);
        btnChonAnh.setPreferredSize(new java.awt.Dimension(89, 30));
        btnChonAnh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChonAnhActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel1.setText("Mã công nhân:");

        txtMaCN.setEditable(false);
        txtMaCN.setMinimumSize(new java.awt.Dimension(70, 22));
        txtMaCN.setPreferredSize(new java.awt.Dimension(70, 30));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel2.setText("Họ và tên:");

        txtHoTen.setEditable(false);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel3.setText("Giới tính:");

        cboGioiTinh.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        cboGioiTinh.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nam", "Nữ" }));
        cboGioiTinh.setEnabled(false);

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel6.setText("CMND:");

        txtCMND.setEditable(false);

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel8.setText("Số điện thoại:");

        txtSDT.setEditable(false);

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel9.setText("Ngày sinh:");

        dateChooserNgaySinh.setCalendarPreferredSize(new java.awt.Dimension(400, 200));
        dateChooserNgaySinh.setEnabled(false);
        dateChooserNgaySinh.setLocale(new java.util.Locale("vi", "VN", ""));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel10.setText("Email:");

        txtEmail.setEditable(false);

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel11.setText("Ngày vào làm:");

        dateChooserNgayVaoLam.setCalendarPreferredSize(new java.awt.Dimension(400, 200));
        dateChooserNgayVaoLam.setEnabled(false);
        dateChooserNgayVaoLam.setLocale(new java.util.Locale("vi", "VN", ""));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel4.setText("Phụ cấp:");

        txtPhuCap.setEditable(false);

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel13.setText("BHXH:");

        chkBHXH.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        chkBHXH.setSelected(true);
        chkBHXH.setText("Có tham gia");

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Quê quán", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 13))); // NOI18N

        cboTinhQQ.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        cboTinhQQ.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tỉnh/Thành phố" }));
        cboTinhQQ.setEnabled(false);
        cboTinhQQ.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboTinhQQItemStateChanged(evt);
            }
        });
        cboTinhQQ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboTinhQQActionPerformed(evt);
            }
        });

        cboHuyenQQ.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        cboHuyenQQ.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Quận/Huyện" }));
        cboHuyenQQ.setEnabled(false);
        cboHuyenQQ.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboHuyenQQItemStateChanged(evt);
            }
        });

        cboXaQQ.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        cboXaQQ.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Xã/Phường" }));
        cboXaQQ.setEnabled(false);
        cboXaQQ.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboXaQQItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cboTinhQQ, 0, 280, Short.MAX_VALUE)
                    .addComponent(cboHuyenQQ, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cboXaQQ, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(cboTinhQQ, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(cboHuyenQQ, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(cboXaQQ, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Địa chỉ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 13))); // NOI18N

        cboTinhDC.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        cboTinhDC.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tỉnh/Thành phố" }));
        cboTinhDC.setEnabled(false);
        cboTinhDC.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboTinhDCItemStateChanged(evt);
            }
        });

        cboHuyenDC.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        cboHuyenDC.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Quận/Huyện" }));
        cboHuyenDC.setEnabled(false);
        cboHuyenDC.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboHuyenDCItemStateChanged(evt);
            }
        });

        cboXaDC.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        cboXaDC.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Xã/Phường" }));
        cboXaDC.setEnabled(false);
        cboXaDC.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboXaDCItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(cboTinhDC, 0, 220, Short.MAX_VALUE)
                .addGap(47, 47, 47)
                .addComponent(cboHuyenDC, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(cboXaDC, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboTinhDC, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboHuyenDC, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboXaDC, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 10, Short.MAX_VALUE))
        );

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel7.setText("Lương thâm niên:");

        txtLuongThamNien.setEditable(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_img, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(btnChonAnh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtHoTen)
                            .addComponent(txtMaCN, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(cboGioiTinh, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(txtCMND, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dateChooserNgayVaoLam, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(45, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(148, 148, 148)
                                .addComponent(jLabel4))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel9)
                                    .addComponent(txtSDT)
                                    .addComponent(jLabel10)
                                    .addComponent(txtEmail)
                                    .addComponent(dateChooserNgaySinh, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE))
                                .addGap(12, 12, 12)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtPhuCap, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                                    .addComponent(chkBHXH, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel7)
                                    .addComponent(txtLuongThamNien))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lbl_img, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnChonAnh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel1)
                                            .addComponent(jLabel8)
                                            .addComponent(jLabel4))
                                        .addGap(0, 0, 0)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtMaCN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(txtPhuCap, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(0, 0, 0)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel9)
                                            .addComponent(jLabel13))
                                        .addGap(0, 0, 0)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(dateChooserNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(chkBHXH, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(jLabel10)
                                                .addComponent(jLabel7)))
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(txtLuongThamNien, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(cboGioiTinh, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel6)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCMND, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, 0)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dateChooserNgayVaoLam, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 15, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 204, 204));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setText("Quản lí công nhân");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(543, 543, 543)
                .addComponent(jLabel5)
                .addContainerGap(539, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(panelChucNang, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(48, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelChucNang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        jPanel1.getAccessibleContext().setAccessibleName("");
    }// </editor-fold>//GEN-END:initComponents

    private void btnChonAnhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChonAnhActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();

        try {
            filename = f.getAbsolutePath();
            ImageIcon imageIcon = new ImageIcon(new ImageIcon(filename).getImage().getScaledInstance(lbl_img.getWidth(), lbl_img.getHeight(), Image.SCALE_SMOOTH));
            lbl_img.setIcon(imageIcon);
            File image = new File(filename);
            FileInputStream fis = new FileInputStream(image);
            ByteArrayOutputStream bos = new ByteArrayOutputStream();
            byte[] buf = new byte[1024];
            for (int n; (n = fis.read(buf)) != -1;) {
                bos.write(buf, 0, n);
            }
            person_img = bos.toByteArray();
        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, e);
            sh_Mes("Chọn ảnh không thành công!", null);
        }
    }//GEN-LAST:event_btnChonAnhActionPerformed

    public void clearTable() {
        while (table.getRowCount() > 0) {
            model.removeRow(0);
        }
    }

    public void loadTable() {
        listCongNhan = congNhan_DAO.getAllCongNhan();
        DateTimeFormatter dateFormat = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        for (CongNhan cn : listCongNhan) {
            String gt = "";
            if (cn.isGioiTinh()) {
                gt += "Nam";
            } else {
                gt += "Nữ";
            }
            String bHXH = "";
            if (cn.isbHXH()) {
                bHXH += "Có tham gia";
            } else {
                bHXH += "Không tham gia";
            }
//            String diaChi_QQ = "";
//            diaChi_QQ += cn.getQueQuan().getXaPhuongTT() + "-" + cn.getQueQuan().getQuanHuyen() + "-" + cn.getQueQuan().getTinhTP();
//            String diaChi_DCLH = "";
//            diaChi_DCLH += cn.getDiaChiLienHe().getXaPhuongTT() + "-" + cn.getDiaChiLienHe().getQuanHuyen() + "-" + cn.getDiaChiLienHe().getTinhTP();
            model.addRow(new Object[]{cn.getMaCN(), cn.getTenCN(), gt, cn.getcMND(), cn.getSoDT(), dateFormat.format(cn.getNgaySinh()), cn.getEmail(), dateFormat.format(cn.getNgayVaoLam()), cn.getPhuCap(), bHXH, cn.getQueQuan().getTinhTP(), cn.getQueQuan().getTinhTP()});
        }
    }

    public void loadTableArrayList(ArrayList<CongNhan> listCongNhan) {
        DateTimeFormatter dateFormat = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        for (CongNhan cn : listCongNhan) {
            String gt = "";
            if (cn.isGioiTinh()) {
                gt += "Nam";
            } else {
                gt += "Nữ";
            }
            String bHXH = "";
            if (cn.isbHXH()) {
                bHXH += "Có tham gia";
            } else {
                bHXH += "Không tham gia";
            }
            String diaChi_QQ = "";
            diaChi_QQ += cn.getQueQuan().getXaPhuongTT() + "-" + cn.getQueQuan().getQuanHuyen() + "-" + cn.getQueQuan().getTinhTP();
            String diaChi_DCLH = "";
            diaChi_DCLH += cn.getDiaChiLienHe().getXaPhuongTT() + "-" + cn.getDiaChiLienHe().getQuanHuyen() + "-" + cn.getDiaChiLienHe().getTinhTP();
            model.addRow(new Object[]{cn.getMaCN(), cn.getTenCN(), gt, cn.getcMND(), cn.getSoDT(), dateFormat.format(cn.getNgaySinh()), cn.getEmail(), dateFormat.format(cn.getNgayVaoLam()), cn.getPhuCap(), bHXH, cn.getQueQuan().getTinhTP(), cn.getDiaChiLienHe().getTinhTP()});
        }
    }

    public String taoMaMoi() {
        String maCuoi = null;
        try {
            maCuoi = congNhan_DAO.getMaCNCuoi().trim().substring(2);
        } catch (Exception e) {
            if (maCuoi == null) {
                return "CN0001";
            }
        }

        int ma = Integer.parseInt(maCuoi);
        String maMoi = String.format("CN%04d", ma + 1);
        return maMoi;
    }

    private void sh_Mes(String mes, JTextField txt) {
        JOptionPane.showMessageDialog(null, mes);
        if (txt == null) {
            return;
        }
        txt.requestFocus();
    }

    private void moKhoaControls(boolean b) {
        btnThem.setEnabled(b);
        btnXoa.setEnabled(b);
        btnSua.setEnabled(b);
        btnLuu.setEnabled(b);
        btnXoaTrang.setEnabled(b);
        btnThoat.setEnabled(b);
    }

    private void moKhoaTextfields(boolean b) {
        txtHoTen.setEditable(b);
        cboGioiTinh.setEnabled(b);
        txtCMND.setEditable(b);
        txtSDT.setEditable(b);
        dateChooserNgaySinh.setEnabled(b);
        txtPhuCap.setEditable(b);
        dateChooserNgayVaoLam.setEnabled(b);
        chkBHXH.setEnabled(b);
        txtEmail.setEditable(b);
        cboTinhDC.setEnabled(b);
        cboTinhQQ.setEnabled(b);
        cboHuyenDC.setEnabled(b);
        cboHuyenQQ.setEnabled(b);
        btnChonAnh.setEnabled(b);
    }

    public LocalDate convertToLocalDateViaInstant(Date dateToConvert) {
        return dateToConvert.toInstant()
                .atZone(ZoneId.systemDefault())
                .toLocalDate();
    }

    public Date convertToDateViaInstant(LocalDate date) {
        return Date.from(date.atStartOfDay().atZone(ZoneId.systemDefault()).toInstant());
    }

    private void clearTextFields() {
        txtHoTen.setText("");
        cboGioiTinh.setSelectedIndex(0);
        txtCMND.setText("");
        txtSDT.setText("");
        txtEmail.setText("");
        txtPhuCap.setText("");
        chkBHXH.setSelected(true);
        dateChooserNgaySinh.setEnabled(true);
        txtLuongThamNien.setText("");
        Calendar cal = Calendar.getInstance();
        try {
            cal.setTime(new Date());
            dateChooserNgaySinh.setSelectedDate(cal);
        } catch (Exception e) {
            e.printStackTrace();
        }
        dateChooserNgayVaoLam.setEnabled(true);
        try {
            cal.setTime(new Date());
            dateChooserNgayVaoLam.setSelectedDate(cal);
        } catch (Exception e) {
            e.printStackTrace();
        }
        cboTinhDC.setSelectedIndex(0);
        cboHuyenDC.setSelectedIndex(0);
        cboXaDC.setSelectedIndex(0);
        cboTinhQQ.setSelectedIndex(0);
        cboHuyenQQ.setSelectedIndex(0);
        cboXaQQ.setSelectedIndex(0);
        cboHuyenDC.setEnabled(false);
        cboXaDC.setEnabled(false);
        cboHuyenQQ.setEnabled(false);
        cboXaQQ.setEnabled(false);
        lbl_img.setIcon(new ImageIcon());

    }

    private void xoaTrang() {
        txtMaCN.setText("");
        txtHoTen.setText("");
        cboGioiTinh.setSelectedIndex(0);
        txtCMND.setText("");
        txtSDT.setText("");
        txtEmail.setText("");
        txtPhuCap.setText("");
        chkBHXH.setSelected(true);
        cboTinhDC.setSelectedIndex(0);
        cboTinhQQ.setSelectedIndex(0);
        cboHuyenDC.setSelectedIndex(0);
        cboHuyenQQ.setSelectedIndex(0);
        cboXaQQ.setSelectedIndex(0);
        cboXaDC.setSelectedIndex(0);
        cboHuyenDC.setEnabled(false);
        cboXaDC.setEnabled(false);
        cboHuyenQQ.setEnabled(false);
        cboXaQQ.setEnabled(false);
    }

    public boolean kiemTraDuLieu() {
        if (txtHoTen.getText().equals("")) {
            sh_Mes("Họ tên không được để trống!", txtHoTen);
            return false;
        }
        if (!(txtHoTen.getText().trim().matches("\\p{L}+(\\s\\p{L}+)+"))) {
            sh_Mes("Tên công nhân không được có kí tự đặc biệt và tối thiểu 2 từ!", txtHoTen);
            return false;
        }
        if (txtCMND.getText().equals("")) {
            sh_Mes("CMND không được để trống!", txtCMND);
            return false;
        }
        if (!(txtCMND.getText().trim().matches("[0-9]{9}|[0-9]{12}"))) {
            sh_Mes("CMND phải 9 số hoặc 12 số!", txtCMND);
            return false;
        }

        LocalDate ngayVaoLam = convertToLocalDateViaInstant(dateChooserNgayVaoLam.getSelectedDate().getTime());
        if (LocalDate.now().isBefore(ngayVaoLam)) {
            sh_Mes("Ngày vào làm phải trước hoặc bằng ngày hiện tại!", null);
            return false;
        }
        if (txtSDT.getText().equals("")) {
            sh_Mes("Số điện thoại không được để trống!", txtSDT);
            return false;
        }
        if (!(txtSDT.getText().trim().matches("0[1-9][0-9]{8}|0[1-9][0-9]{9}"))) {
            JOptionPane.showMessageDialog(this, "Số điện thoại phải có 10 số hoặc 11 số và bắt đầu bằng số 0 và số thứ 2 khác 0!");
            txtSDT.requestFocus();
            return false;
        }
        LocalDate ngaySinh = convertToLocalDateViaInstant(dateChooserNgaySinh.getSelectedDate().getTime());
        if (LocalDate.now().getYear() - ngaySinh.getYear() < 18) {
            sh_Mes("Công nhân phải đủ 18 tuổi trỡ lên!", txtSDT);
            return false;
        }
        if (txtEmail.getText().trim().equals("")) {
            sh_Mes("Email không được để trống!", txtEmail);
            txtEmail.requestFocus();
            return false;
        }
        if (!(txtEmail.getText().trim().matches("[A-Za-z0-9]{3,}@gmail.com"))) {
            sh_Mes("Tên email phải theo cú pháp tên(tối thiểu 3 kí tự)@gmail.com", txtEmail);
            txtEmail.requestFocus();
            return false;
        }
        if (txtPhuCap.getText().equals("")) {
            sh_Mes("Phụ cấp không được rỗng!", txtPhuCap);
            txtPhuCap.requestFocus();
            return false;
        }
        if (Integer.parseInt(txtPhuCap.getText().trim()) < 0) {
            JOptionPane.showMessageDialog(this, "Phụ cấp phải lớn hơn hoặc bằng 0!");
            sh_Mes("Phụ cấp phải lớn hơn hoặc bằng 0!", txtPhuCap);
            txtPhuCap.requestFocus();
            return false;
        }
        if (cboTinhDC.getSelectedIndex() == 0) {
            sh_Mes("Địa chỉ không được để trống! ", null);
            return false;
        }
        if (cboHuyenDC.getSelectedIndex() == 0) {
            sh_Mes("Địa chỉ không được để trống!", null);
            return false;
        }
        if (cboXaDC.getSelectedIndex() == 0) {
            sh_Mes("Địa chỉ không được để trống!", null);
            return false;
        }
        if (cboTinhQQ.getSelectedIndex() == 0) {
            sh_Mes("Quê quán không được để trống! ", null);
            return false;
        }
        if (cboHuyenQQ.getSelectedIndex() == 0) {
            sh_Mes("Quê quán không được để trống!", null);
            return false;
        }
        if (cboXaQQ.getSelectedIndex() == 0) {
            sh_Mes("Quê quán không được để trống!", null);
            return false;
        }
        return true;
    }

    private void napDuLieuVaoTextField() {
        int n = table.getSelectedRow();
        if (n == -1) {
            return;
        }
        ArrayList<CongNhan> listCongNhan1 = new ArrayList<>();
        listCongNhan1 = congNhan_DAO.timCongNhanTheoMa(model.getValueAt(n, 0).toString());
        for (CongNhan cn : listCongNhan1) {
            txtMaCN.setText(model.getValueAt(n, 0).toString());
            txtHoTen.setText(model.getValueAt(n, 1).toString());
            cboGioiTinh.setSelectedItem(model.getValueAt(n, 2).toString());
            txtCMND.setText(model.getValueAt(n, 3).toString());
            txtSDT.setText(model.getValueAt(n, 4).toString());
            txtEmail.setText(model.getValueAt(n, 6).toString());
            txtPhuCap.setText(String.valueOf((int) cn.getPhuCap()));
            txtLuongThamNien.setText(String.valueOf(cn.getThamNien()));
            if (model.getValueAt(n, 9).toString().equalsIgnoreCase("Có tham gia")) {
                chkBHXH.setSelected(true);
            } else {
                chkBHXH.setSelected(false);
            }
            dateChooserNgaySinh.setEnabled(true);
            Calendar cal = Calendar.getInstance();
            try {
                cal.setTime(new SimpleDateFormat("dd/MM/yyyy").parse(model.getValueAt(n, 5).toString()));
                dateChooserNgaySinh.setSelectedDate(cal);
            } catch (Exception e) {
                e.printStackTrace();
            }
            dateChooserNgaySinh.setEnabled(false);
            dateChooserNgayVaoLam.setEnabled(true);
            try {
                cal.setTime(new SimpleDateFormat("dd/MM/yyyy").parse(model.getValueAt(n, 7).toString()));
                dateChooserNgayVaoLam.setSelectedDate(cal);
            } catch (Exception e) {
                e.printStackTrace();
            }
            dateChooserNgayVaoLam.setEnabled(false);

            cboTinhQQ.setSelectedItem(cn.getQueQuan().getTinhTP());
            cboHuyenQQ.setSelectedItem(cn.getQueQuan().getQuanHuyen());
            cboXaQQ.setSelectedItem(cn.getQueQuan().getXaPhuongTT());
            cboTinhDC.setSelectedItem(cn.getDiaChiLienHe().getTinhTP());
            cboHuyenDC.setSelectedItem(cn.getDiaChiLienHe().getQuanHuyen());
            cboXaDC.setSelectedItem(cn.getDiaChiLienHe().getXaPhuongTT());
            cboTinhDC.setEnabled(false);
            cboTinhQQ.setEnabled(false);
            cboHuyenDC.setEnabled(false);
            cboHuyenQQ.setEnabled(false);
            cboXaDC.setEnabled(false);
            cboXaQQ.setEnabled(false);
//        byte[] imgg = model.getValueAt(n, 12).toString().getBytes();
            if (cn.getHinhAnh() == null) {
                lbl_img.setIcon(new ImageIcon());
            } else {
                byte[] imgg = (cn.getHinhAnh());
                ImageIcon imageIcon = new ImageIcon(new ImageIcon(imgg).getImage().getScaledInstance(lbl_img.getWidth(), lbl_img.getHeight(), Image.SCALE_SMOOTH));
                lbl_img.setIcon(imageIcon);
            }
        }

    }

    public void themCongNhan() {
        String maCN = txtMaCN.getText().trim();
        String hoTen = txtHoTen.getText().trim();
        boolean gioiTinh;
        if (cboGioiTinh.getSelectedIndex() == 0) {
            gioiTinh = true;
        } else {
            gioiTinh = false;
        }
        String cmnd = txtCMND.getText().trim();
        String sdt = txtSDT.getText().trim();
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
        Date dNgaySinh = (Date) dateChooserNgaySinh.getSelectedDate().getTime();
        LocalDate ngaySinh = dNgaySinh.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        String email = txtEmail.getText().trim();
        Date dNgayVaoLam = (Date) dateChooserNgayVaoLam.getSelectedDate().getTime();
        LocalDate ngayVaoLam = dNgayVaoLam.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        double phuCap = Double.parseDouble(txtPhuCap.getText().trim());
        boolean bhxh;
        if (chkBHXH.isSelected()) {
            bhxh = true;
        } else {
            bhxh = false;
        }
        String tinhQQ = cboTinhQQ.getSelectedItem().toString().trim();
        String huyenQQ = cboHuyenQQ.getSelectedItem().toString().trim();
        String xaQQ = cboXaQQ.getSelectedItem().toString().trim();
        String tinhDC = cboTinhDC.getSelectedItem().toString().trim();
        String huyenDC = cboHuyenDC.getSelectedItem().toString().trim();
        String xaDC = cboXaDC.getSelectedItem().toString().trim();
        DiaChi dc_QQ = new DiaChi(tinhQQ, huyenQQ, xaQQ);
        DiaChi dc_LH = new DiaChi(tinhDC, huyenDC, xaDC);
        CongNhan cn = new CongNhan(maCN, hoTen, gioiTinh, dc_QQ, dc_LH, sdt, cmnd, ngaySinh, person_img, email, ngayVaoLam, bhxh, phuCap, true);
        if (congNhan_DAO.themCongNhan(cn)) {
            sh_Mes("Thêm công nhân thành công!", null);
            clearTable();
            loadTableArrayList(congNhan_DAO.getAllCongNhanConLam());
        } else {
            sh_Mes("Thêm công nhân thất bại!", null);
        }
    }

    public void xoaCongNhan() {
        int row = table.getSelectedRow();
        if (row == -1) {
            sh_Mes("Chọn công nhân cần xóa!", null);
        } else {
            String maCN = table.getValueAt(row, 0).toString();
            int op = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xóa công nhân này?", "delete", JOptionPane.YES_NO_OPTION);
            if (op == JOptionPane.YES_OPTION) {
                if (congNhan_DAO.xoaCongNhan(maCN)) {
                    sh_Mes("Xóa công nhân thành công!", null);
                    clearTable();
                    loadTableArrayList(congNhan_DAO.getAllCongNhanConLam());
                } else {
                    sh_Mes("Xóa công nhân thất bại!", null);
                    return;
                }
            }
        }
    }

    public void suaCongNhan() {
        int op = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn sửa thông tin công nhân?", "update", JOptionPane.YES_NO_OPTION);
        if (op == JOptionPane.YES_OPTION) {
            String maCN = txtMaCN.getText().trim();
            String hoTen = txtHoTen.getText().trim();
            boolean gioiTinh;
            if (cboGioiTinh.getSelectedIndex() == 0) {
                gioiTinh = true;
            } else {
                gioiTinh = false;
            }
            String cmnd = txtCMND.getText().trim();
            String sdt = txtSDT.getText().trim();
            SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
            Date dNgaySinh = (Date) dateChooserNgaySinh.getSelectedDate().getTime();
            LocalDate ngaySinh = dNgaySinh.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
            String email = txtEmail.getText().trim();
            Date dNgayVaoLam = (Date) dateChooserNgayVaoLam.getSelectedDate().getTime();
            LocalDate ngayVaoLam = dNgayVaoLam.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
            double phuCap = Double.parseDouble(txtPhuCap.getText().trim());
            boolean bhxh;
            if (chkBHXH.isSelected()) {
                bhxh = true;
            } else {
                bhxh = false;
            }
            String tinhQQ = cboTinhQQ.getSelectedItem().toString().trim();
            String huyenQQ = cboHuyenQQ.getSelectedItem().toString().trim();
            String xaQQ = cboXaQQ.getSelectedItem().toString().trim();
            String tinhDC = cboTinhDC.getSelectedItem().toString().trim();
            String huyenDC = cboHuyenDC.getSelectedItem().toString().trim();
            String xaDC = cboXaDC.getSelectedItem().toString().trim();
            DiaChi dc_QQ = new DiaChi(tinhQQ, huyenQQ, xaQQ);
            DiaChi dc_LH = new DiaChi(tinhDC, huyenDC, xaDC);
            CongNhan cn = new CongNhan(maCN, hoTen, gioiTinh, dc_QQ, dc_LH, sdt, cmnd, ngaySinh, person_img, email, ngayVaoLam, bhxh, phuCap);
            if (congNhan_DAO.suaCongNhan(cn)) {
                sh_Mes("Sửa thông tin công nhân thành công!", null);
                clearTable();
                loadTableArrayList(congNhan_DAO.getAllCongNhanConLam());
            } else {
                sh_Mes("Sửa thông tin công nhân thất bại!", null);
            }
        }

    }

    public void timCongNhanTheoMa() {
        String maCN = txtTim.getText().trim();
        ArrayList<CongNhan> listCongNhan = null;
        listCongNhan = congNhan_DAO.timCongNhanTheoMa(maCN);
        clearTable();
        loadTableArrayList(listCongNhan);
    }

    public void timCongNhanTheoTen() {
        clearTable();
        loadTableArrayList(congNhan_DAO.timCongNhanTheoTen(txtTim.getText().trim()));
    }


    private void cboTinhQQActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboTinhQQActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboTinhQQActionPerformed

    private void cboTinhQQItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboTinhQQItemStateChanged
        // TODO add your handling code here:
        cboHuyenQQ.setEnabled(true);
        for (int i = cboHuyenQQ.getItemCount() - 1; i > 0; i--) {
            cboHuyenQQ.removeItemAt(i);
        }
        ArrayList<String> listHuyen = diaChi_DAO.getQuanHuyen(cboTinhQQ.getSelectedItem().toString().trim());
        for (String huyen : listHuyen) {
            cboHuyenQQ.addItem(huyen);
        }
    }//GEN-LAST:event_cboTinhQQItemStateChanged

    private void cboHuyenQQItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboHuyenQQItemStateChanged
        // TODO add your handling code here:
        cboXaQQ.setEnabled(true);
        for (int i = cboXaQQ.getItemCount() - 1; i > 0; i--) {
            cboXaQQ.removeItemAt(i);
        }
        ArrayList<String> listXa = diaChi_DAO.getXaPhuong(cboTinhQQ.getSelectedItem().toString().trim(), cboHuyenQQ.getSelectedItem().toString().trim());
        for (String xa : listXa) {
            cboXaQQ.addItem(xa);
        }
    }//GEN-LAST:event_cboHuyenQQItemStateChanged

    private void cboXaQQItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboXaQQItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cboXaQQItemStateChanged

    private void cboTinhDCItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboTinhDCItemStateChanged
        // TODO add your handling code here:
        cboHuyenDC.setEnabled(true);
        for (int i = cboHuyenDC.getItemCount() - 1; i > 0; i--) {
            cboHuyenDC.removeItemAt(i);
        }
        ArrayList<String> listHuyen = diaChi_DAO.getQuanHuyen(cboTinhDC.getSelectedItem().toString().trim());
        for (String huyen : listHuyen) {
            cboHuyenDC.addItem(huyen);
        }
    }//GEN-LAST:event_cboTinhDCItemStateChanged

    private void cboHuyenDCItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboHuyenDCItemStateChanged
        // TODO add your handling code here:
        cboXaDC.setEnabled(true);
        for (int i = cboXaDC.getItemCount() - 1; i > 0; i--) {
            cboXaDC.removeItemAt(i);
        }
        ArrayList<String> listXa = diaChi_DAO.getXaPhuong(cboTinhDC.getSelectedItem().toString(), cboHuyenDC.getSelectedItem().toString());
        for (String xa : listXa) {
            cboXaDC.addItem(xa);
        }
    }//GEN-LAST:event_cboHuyenDCItemStateChanged

    private void cboXaDCItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboXaDCItemStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_cboXaDCItemStateChanged

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        // TODO add your handling code here:
        napDuLieuVaoTextField();
    }//GEN-LAST:event_tableMouseClicked

    private void txtTimKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKeyReleased
        // TODO add your handling code here:
//        timCongNhanTheoMa();
        timCongNhanTheoTen();


    }//GEN-LAST:event_txtTimKeyReleased

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        if (btnThem.getText().trim().equalsIgnoreCase("Thêm")) {
            txtMaCN.setText(taoMaMoi());
            txtHoTen.requestFocus();
            moKhoaTextfields(true);
            moKhoaControls(false);
            btnThem.setEnabled(true);
            btnLuu.setEnabled(true);
            btnThem.setText("Hủy");
            clearTextFields();
        } else if (btnThem.getText().trim().equalsIgnoreCase("Hủy")) {
            txtMaCN.setText("");
            moKhoaTextfields(false);
            moKhoaControls(true);
            btnLuu.setEnabled(false);
            btnThem.setText("Thêm");
            clearTextFields();
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnLuuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuuActionPerformed
        // TODO add your handling code here:
        if (btnThem.getText().trim().equalsIgnoreCase("Hủy")) {
            if (kiemTraDuLieu()) {
                themCongNhan();
                moKhoaTextfields(false);
                clearTextFields();
                moKhoaControls(true);
                btnLuu.setEnabled(false);
                btnLuu.setText("Lưu");
                btnThem.setText("Thêm");
                txtMaCN.setText("");
            }

        }
        if (btnSua.getText().trim().equalsIgnoreCase("Hủy")) {
            if (kiemTraDuLieu()) {
                suaCongNhan();
                moKhoaTextfields(false);
                clearTextFields();
                moKhoaControls(true);
                btnLuu.setEnabled(false);
                btnXoaTrang.setEnabled(false);
                btnLuu.setText("Lưu");
                btnSua.setText("Sửa");
                txtMaCN.setText("");
            }

        }
    }//GEN-LAST:event_btnLuuActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        if (btnSua.getText().trim().equals("Sửa")) {
            int row = table.getSelectedRow();
            if (row == -1) {
                sh_Mes("Chọn công nhân cần sửa!", null);
            } else {
                moKhoaTextfields(true);
                moKhoaControls(false);
                btnLuu.setEnabled(true);
                btnSua.setEnabled(true);
                btnXoaTrang.setEnabled(true);
                cboXaDC.setEnabled(true);
                cboXaQQ.setEnabled(true);
                btnSua.setText("Hủy");
//                btnLuu.setText("Lưu(S)");
            }
        } else if (btnSua.getText().trim().equals("Hủy")) {
            moKhoaTextfields(false);
            moKhoaControls(true);
            btnLuu.setEnabled(false);
            cboXaDC.setEnabled(false);
            cboXaQQ.setEnabled(false);
            btnXoaTrang.setEnabled(false);
            btnSua.setText("Sửa");
//            btnLuu.setText("Lưu");
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        xoaCongNhan();
        clearTextFields();
        txtMaCN.setText("");
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnXoaTrangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaTrangActionPerformed
        // TODO add your handling code here:
        clearTextFields();
    }//GEN-LAST:event_btnXoaTrangActionPerformed

    private void cboTrangThaiItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboTrangThaiItemStateChanged
        // TODO add your handling code here:
        if (cboTrangThai.getSelectedIndex() == 0) {
            clearTable();
            clearTextFields();
            txtMaCN.setText("");
            dateChooserNgayVaoLam.setEnabled(false);
            dateChooserNgaySinh.setEnabled(false);
            loadTableArrayList(congNhan_DAO.getAllCongNhanConLam());
        } else {
            clearTable();
            clearTextFields();
            txtMaCN.setText("");
            dateChooserNgayVaoLam.setEnabled(false);
            dateChooserNgaySinh.setEnabled(false);
            loadTableArrayList(congNhan_DAO.getAllCongNhanNghiLam());
        }
    }//GEN-LAST:event_cboTrangThaiItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChonAnh;
    private javax.swing.JButton btnLuu;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnThoat;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton btnXoaTrang;
    private javax.swing.JComboBox<String> cboGioiTinh;
    private javax.swing.JComboBox<String> cboHuyenDC;
    private javax.swing.JComboBox<String> cboHuyenQQ;
    private javax.swing.JComboBox<String> cboTinhDC;
    private javax.swing.JComboBox<String> cboTinhQQ;
    private javax.swing.JComboBox<String> cboTrangThai;
    private javax.swing.JComboBox<String> cboXaDC;
    private javax.swing.JComboBox<String> cboXaQQ;
    private javax.swing.JCheckBox chkBHXH;
    private datechooser.beans.DateChooserCombo dateChooserNgaySinh;
    private datechooser.beans.DateChooserCombo dateChooserNgayVaoLam;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_img;
    private javax.swing.JPanel panelChucNang;
    private javax.swing.JTable table;
    private javax.swing.JTextField txtCMND;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtHoTen;
    private javax.swing.JTextField txtLuongThamNien;
    private javax.swing.JTextField txtMaCN;
    private javax.swing.JTextField txtPhuCap;
    private javax.swing.JTextField txtSDT;
    private javax.swing.JTextField txtTim;
    // End of variables declaration//GEN-END:variables
}
