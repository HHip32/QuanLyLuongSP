/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package gui;

import dao.BangChamCongSP_DAO;
import dao.BangDiemDanhCN_DAO;
import dao.BangLuongCN_DAO;
import entity.BangChamCongSP;
import entity.BangDiemDanhCN;
import entity.BangLuongCN;
import entity.CongDoan;
import entity.CongNhan;
import entity.NgayLamViec;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Hashtable;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author admin
 */
public class pnTinhLuongCongNhan_GUI extends javax.swing.JPanel {

    private DefaultTableModel modelLCN;

    private BangLuongCN_DAO bangLuongCN_DAO;
    private BangChamCongSP_DAO bangChamCongSP_DAO;
    private BangDiemDanhCN_DAO bangDiemDanhCN_DAO;

    private ArrayList<BangChamCongSP> dsBangCCSP;
    private ArrayList<BangLuongCN> dsBangLCN;
    private ArrayList<BangDiemDanhCN> dsBangDDCN;

    /**
     * Creates new form pnTinhLuongCongNhan_GUI
     */
    public pnTinhLuongCongNhan_GUI() {
        bangLuongCN_DAO = new BangLuongCN_DAO();
        bangChamCongSP_DAO = new BangChamCongSP_DAO();
        bangDiemDanhCN_DAO = new BangDiemDanhCN_DAO();

        dsBangCCSP = new ArrayList<BangChamCongSP>();
        dsBangLCN = new ArrayList<BangLuongCN>();
        dsBangDDCN = new  ArrayList<BangDiemDanhCN>();
        initComponents();
        docNamVaoCboBox();
        cboThang.setSelectedIndex(LocalDate.now().getMonthValue() - 1);
        cboNam.setSelectedIndex(cboNam.getItemCount() - 1);
        xoaDLTableTC();
        docDLVaoTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cboThang = new javax.swing.JComboBox<>();
        cboNam = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableLCN = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();

        setBackground(new java.awt.Color(209, 209, 209));
        setPreferredSize(new java.awt.Dimension(1310, 760));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Tháng");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("Năm");

        cboThang.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        cboThang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tháng 1", "Tháng 2", "Tháng 3", "Tháng 4", "Tháng 5", "Tháng 6", "Tháng 7", "Tháng 8", "Tháng 9", "Tháng 10", "Tháng 11", "Tháng 12" }));
        cboThang.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboThangItemStateChanged(evt);
            }
        });

        cboNam.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        cboNam.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboNamItemStateChanged(evt);
            }
        });

        modelLCN = new DefaultTableModel(new String [] {
            "STT", "Mã công nhân", "Họ tên", "Lương sản phẩm", "Lương tăng ca",
            "Nghỉ không phép", "Phạt", "BHXH","Phụ cấp","Lương thâm niên","Thưởng","Tổng lương",
        }, 0){
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class,
                java.lang.Float.class, java.lang.Float.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class,  java.lang.Double.class, java.lang.Double.class,  java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false,false, false, false, false, false, false, false, false,false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };
        tableLCN.setModel(modelLCN);
        tableLCN.getColumnModel().getColumn(0).setPreferredWidth(5);

        tableLCN.setRowHeight(20);
        jScrollPane1.setViewportView(tableLCN);

        jButton2.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/printing.png"))); // NOI18N
        jButton2.setText("In phiếu lương tổng hợp");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 204, 204));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        jLabel6.setText("Bảng lương công nhân");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(502, 502, 502)
                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 322, Short.MAX_VALUE)
                .addGap(474, 474, 474))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addContainerGap(10, Short.MAX_VALUE))
        );

        jButton3.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/printing.png"))); // NOI18N
        jButton3.setText("In phiếu lương chi tiết");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addGap(12, 12, 12)
                .addComponent(jButton2)
                .addGap(95, 95, 95))
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(cboThang, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(63, 63, 63)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(cboNam, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cboThang, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboNam, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 592, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cboThangItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboThangItemStateChanged
        xoaDLTableTC();
        docDLVaoTable();
    }//GEN-LAST:event_cboThangItemStateChanged

    private void cboNamItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboNamItemStateChanged
        xoaDLTableTC();
        docDLVaoTable();
    }//GEN-LAST:event_cboNamItemStateChanged

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
         if(modelLCN.getRowCount() <= 0){
            JOptionPane.showMessageDialog(this, "Không có dữ liệu");
            return;
        }
        if(tableLCN.getSelectedRow() <0){
            JOptionPane.showMessageDialog(this, "Chọn công nhân cần xem");
            return;
        }
        try {
            int thang =  cboThang.getSelectedIndex() + 1;
            int nam = Integer.parseInt(cboNam.getSelectedItem().toString().trim());
            int row = tableLCN.getSelectedRow();
            String maCN = (String) modelLCN.getValueAt(row, 1);
            Hashtable map = new Hashtable();
            JasperReport rpt = JasperCompileManager.compileReport("src/report/luongChiTietCN.jrxml");
            map.put("maCN", maCN);
            map.put("nam", nam);
            map.put("thang", thang);
            Connection con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName = QLLUONG ;user = sa;password = 123456789");
            JasperPrint p = JasperFillManager.fillReport(rpt, map, con);
            JasperViewer.viewReport(p, false);        
        } catch (JRException | SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (modelLCN.getRowCount() <= 0) {
            JOptionPane.showMessageDialog(this, "Không có dữ liệu");
            return;
        }
        try {
            int thang = cboThang.getSelectedIndex() + 1;
            int nam = Integer.parseInt(cboNam.getSelectedItem().toString().trim());
            Hashtable map = new Hashtable();
            JasperReport rpt = JasperCompileManager.compileReport("src/Report/rptLuongCN.jrxml");
            map.put("thang", thang);
            map.put("nam", nam);
            Connection con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName = QLLUONG ;user = sa;password = 123456789");
            JasperPrint p = JasperFillManager.fillReport(rpt, map, con);
            JasperViewer.viewReport(p, false);
        } catch (JRException | SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void docDLVaoTable() {
        int thang = cboThang.getSelectedIndex() + 1;
        int nam = Integer.parseInt(cboNam.getSelectedItem().toString().trim());
//        dsLNV = bangLuongNV_DAO.getAllDsBLCN(thang, nam);
        dsBangCCSP = bangChamCongSP_DAO.getAllDsCCSP(thang, nam);
        dsBangLCN = bangLuongCN_DAO.getAllDsBLCN(thang, nam);
        dsBangDDCN = bangDiemDanhCN_DAO.getAllDsDDCN(thang,nam);
        String maLCN;
        int i;
        NgayLamViec ngayLV;
        CongNhan cn;
        CongDoan cd;
        BangLuongCN bangLCN;
        for (BangChamCongSP bangCCSP : dsBangCCSP) {
            ngayLV = bangCCSP.getBangDiemDanhCN().getNgayLamViec();
            cn = bangCCSP.getBangDiemDanhCN().getBangPhanCong().getCongNhan();
            cd = bangCCSP.getBangDiemDanhCN().getBangPhanCong().getCongDoan();
            maLCN = String.format("LCN%04d%02d%04d", Integer.parseInt(cn.getMaCN().substring(2)), ngayLV.getNgayLam().getMonthValue(), ngayLV.getNgayLam().getYear());

            //Tìm bảng lương
            i = dsBangLCN.indexOf(new BangLuongCN(maLCN));
            if (i == -1) {
                bangLCN = new BangLuongCN(maLCN, thang, nam, 0, 0, 0, 0, cn.getPhuCap(), cn.getThamNien(), 0, cn.isbHXH(), cn);
            } else {
                bangLCN = dsBangLCN.get(i);
            }

            //Tính lương
            if (bangCCSP.getCaLam() != 3) {
                bangLCN.setLuongSanPham(bangCCSP.getSoLuongSP(), cd.getGia(), ngayLV);
            } else {
                if (bangChamCongSP_DAO.ktraCoTangCa(cn.getMaCN(), ngayLV.getNgayLam())) {
                    bangLCN.setLuongTangCa(bangCCSP.getSoLuongSP(), cd.getGia(), ngayLV);
                } else {
                    bangLCN.setLuongSanPham(bangCCSP.getSoLuongSP(), cd.getGia(), ngayLV);
                }
            }
            bangLCN.setThemPhat(bangCCSP.getPhat());
            //Thêm bảng lương vào danh sách
            if (i == -1) {
                dsBangLCN.add(bangLCN);
            } else {
                dsBangLCN.remove(i);
                dsBangLCN.add(i, bangLCN);
            }
        }
        
        for(BangDiemDanhCN bangDiemDanhCN: dsBangDDCN){
            
            cn=bangDiemDanhCN.getBangPhanCong().getCongNhan();
            maLCN = String.format("LCN%04d%02d%04d", Integer.parseInt(cn.getMaCN().substring(2)), bangDiemDanhCN.getNgayLamViec().getNgayLam().getMonthValue(), bangDiemDanhCN.getNgayLamViec().getNgayLam().getYear());
            //Tìm bảng lương
            i = dsBangLCN.indexOf(new BangLuongCN(maLCN));
            if (i == -1) {
                bangLCN = new BangLuongCN(maLCN, thang, nam, 0, 0, 0, 0, cn.getPhuCap(), cn.getThamNien(), 0, cn.isbHXH(), cn);
            } else {
                bangLCN = dsBangLCN.get(i);
            }
            bangLCN.setThemPhat(bangDiemDanhCN.getPhat());
            //Thêm bảng lương vào danh sách
            if (i == -1) {
                dsBangLCN.add(bangLCN);
            } else {
                dsBangLCN.remove(i);
                dsBangLCN.add(i, bangLCN);
            }
        }
        
        
        int dem=0;
        for (BangLuongCN bangLuongCN : dsBangLCN) {
            modelLCN.addRow(new Object[]{++dem,bangLuongCN.getCongNhan().getMaCN(),bangLuongCN.getCongNhan().getTenCN(),bangLuongCN.getLuongSanPham(),bangLuongCN.getLuongTangCa(),bangLuongCN.getSoNgayNghiKoPhep(),bangLuongCN.getTongPhat(),bangLuongCN.getBHXH(),bangLuongCN.getPhuCap(),bangLuongCN.getLuongThamNien(),bangLuongCN.getThuong(),bangLuongCN.getTongLuong()});
            bangLuongCN_DAO.suaBLCN(bangLuongCN);
        }

    }

    private void xoaDLTableTC() {
        DefaultTableModel model = (DefaultTableModel) tableLCN.getModel();
        model.setRowCount(0);
    }

    private void docNamVaoCboBox() {
        ArrayList<Integer> dsNam = bangLuongCN_DAO.getAllNam();
        Collections.sort(dsNam, (o1, o2) -> o1 - o2);
        if(dsNam.isEmpty()){
             cboNam.addItem(LocalDate.now().getYear() + "");
             return;
        }
        for (Integer nam : dsNam) {
            cboNam.addItem(nam + "");
        }
        
    }

    private void sh_Mes(String mes, JTextField txt) {
        JOptionPane.showMessageDialog(null, mes);
        if (txt == null) {
            return;
        }
        txt.requestFocus();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cboNam;
    private javax.swing.JComboBox<String> cboThang;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableLCN;
    // End of variables declaration//GEN-END:variables
}
