/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package gui;

import dao.CongDoan_DAO;
import dao.SanPham_DAO;
import entity.CongDoan;
import entity.SanPham;
import java.sql.Date;
import java.time.LocalDate;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.JTextField;
import javax.swing.SpinnerModel;
import javax.swing.SpinnerNumberModel;
import javax.swing.table.DefaultTableModel;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.util.Collections;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.table.TableModel;

/**
 *
 * @author admin
 */
public class pnTaoCongDoan_GUI extends javax.swing.JPanel {

    /**
     * Creates new form pnTaoCongDoan_GUI
     */
    private DefaultTableModel dsspModel;
    private DefaultTableModel dscdModel;
    private SpinnerNumberModel spinTTModel;
    private SanPham_DAO sanPham_DAO;
    private CongDoan_DAO congDoan_DAO;
    private ArrayList<SanPham> dsSP;

    public pnTaoCongDoan_GUI() {
        sanPham_DAO = new SanPham_DAO();
        congDoan_DAO = new CongDoan_DAO();
        dsSP = sanPham_DAO.getAllSanPhamChuaHT();
        initComponents();
        moKhoaTFSP(false);
        moKhoaTextfields(false);
        btnLuu.setEnabled(false);
        txtMaSanPhamCD.setEditable(false);
        txtMaCongDoan.setEditable(false);
        txtSoLuongCD.setEditable(false);
        docDLVaoTableSP();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelThongTin = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtMaCongDoan = new javax.swing.JTextField();
        txtTenCongDoan = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtMaSanPhamCD = new javax.swing.JTextField();
        txtSoLuongCD = new javax.swing.JTextField();
        txtGiaCD = new javax.swing.JTextField();
        spinSTT = new javax.swing.JSpinner();
        panelDSSSP = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableDSSP = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        txtMaSanPham = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtTenSP = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtSLSP = new javax.swing.JTextField();
        lblSoCD = new javax.swing.JLabel();
        txtSoCD = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtNgayHT = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtTimSP = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableDSCD = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        btnThem = new javax.swing.JButton();
        btnLuu = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnThoat = new javax.swing.JButton();

        setBackground(new java.awt.Color(209, 209, 209));
        setMaximumSize(new java.awt.Dimension(1310, 757));
        setName(""); // NOI18N
        setPreferredSize(new java.awt.Dimension(1310, 757));

        panelThongTin.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin công đoạn", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N
        panelThongTin.setMaximumSize(new java.awt.Dimension(660, 170));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel1.setText("Mã công đoạn:");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel2.setText("Tên công đoạn:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel3.setText("Số thứ tự:");

        txtMaCongDoan.setEditable(false);
        txtMaCongDoan.setMaximumSize(new java.awt.Dimension(200, 30));
        txtMaCongDoan.setMinimumSize(new java.awt.Dimension(150, 30));
        txtMaCongDoan.setPreferredSize(new java.awt.Dimension(200, 30));
        txtMaCongDoan.setRequestFocusEnabled(false);

        txtTenCongDoan.setMaximumSize(new java.awt.Dimension(150, 30));
        txtTenCongDoan.setMinimumSize(new java.awt.Dimension(150, 30));
        txtTenCongDoan.setPreferredSize(new java.awt.Dimension(150, 30));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel4.setText("Mã sản phẩm:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel5.setText("Số lượng:");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel6.setText("Giá:");

        txtMaSanPhamCD.setEditable(false);
        txtMaSanPhamCD.setMaximumSize(new java.awt.Dimension(200, 30));
        txtMaSanPhamCD.setMinimumSize(new java.awt.Dimension(150, 30));
        txtMaSanPhamCD.setPreferredSize(new java.awt.Dimension(200, 30));

        txtSoLuongCD.setMaximumSize(new java.awt.Dimension(200, 30));
        txtSoLuongCD.setMinimumSize(new java.awt.Dimension(200, 30));
        txtSoLuongCD.setPreferredSize(new java.awt.Dimension(200, 30));
        txtSoLuongCD.addKeyListener(new KeyAdapter() {
            public void keyTyped(KeyEvent e) {
                char c = e.getKeyChar();
                if (((c < '0') || (c > '9')) && (c != KeyEvent.VK_BACK_SPACE)) {
                    e.consume(); // if it's not a number, ignore the event
                }
            }
        });

        txtGiaCD.setMaximumSize(new java.awt.Dimension(200, 30));
        txtGiaCD.setMinimumSize(new java.awt.Dimension(200, 30));
        txtGiaCD.setPreferredSize(new java.awt.Dimension(200, 30));
        txtGiaCD.addKeyListener(new KeyAdapter() {
            public void keyTyped(KeyEvent e) {
                char c = e.getKeyChar();
                if (((c < '0') || (c > '9')) && (c != KeyEvent.VK_BACK_SPACE)) {
                    e.consume(); // if it's not a number, ignore the event
                }
            }
        });

        spinSTT.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        spinSTT.setMaximumSize(new java.awt.Dimension(150, 30));
        spinSTT.setMinimumSize(new java.awt.Dimension(150, 30));
        spinSTT.setPreferredSize(new java.awt.Dimension(150, 30));
        spinSTT.setValue(1);
        spinTTModel = new SpinnerNumberModel(1, 1, 1, 1);
        spinSTT.setModel(spinTTModel);

        javax.swing.GroupLayout panelThongTinLayout = new javax.swing.GroupLayout(panelThongTin);
        panelThongTin.setLayout(panelThongTinLayout);
        panelThongTinLayout.setHorizontalGroup(
            panelThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelThongTinLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(panelThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtTenCongDoan, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(spinSTT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtMaCongDoan, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE))
                .addGap(40, 40, 40)
                .addGroup(panelThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtSoLuongCD, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, Short.MAX_VALUE)
                    .addComponent(txtMaSanPhamCD, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                    .addComponent(txtGiaCD, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelThongTinLayout.setVerticalGroup(
            panelThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelThongTinLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(panelThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtMaCongDoan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4)
                    .addComponent(txtMaSanPhamCD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtTenCongDoan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5)
                    .addComponent(txtSoLuongCD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6)
                    .addComponent(txtGiaCD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinSTT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40))
        );

        panelDSSSP.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh sách sản phẩm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N
        panelDSSSP.setMaximumSize(new java.awt.Dimension(657, 220));
        panelDSSSP.setName(""); // NOI18N

        dsspModel = new DefaultTableModel(
            new String [] { "Tên sản phẩm", "Số lượng" },
            0){

            boolean[] canEdit = new boolean[]{
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        };
        tableDSSP.setModel(dsspModel);
        tableDSCD.setRowHeight(20);
        tableDSSP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableDSSPMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tableDSSPMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tableDSSP);

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel7.setText("Mã sản phẩm:");

        txtMaSanPham.setEditable(false);
        txtMaSanPham.setMaximumSize(new java.awt.Dimension(200, 30));
        txtMaSanPham.setMinimumSize(new java.awt.Dimension(150, 30));
        txtMaSanPham.setPreferredSize(new java.awt.Dimension(200, 30));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel8.setText("Tên sản phẩm:");

        txtTenSP.setPreferredSize(new java.awt.Dimension(71, 30));

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel11.setText("Số lượng:");

        txtSLSP.setPreferredSize(new java.awt.Dimension(71, 30));

        lblSoCD.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        lblSoCD.setText("Số công đoạn");

        txtSoCD.setPreferredSize(new java.awt.Dimension(71, 30));

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel13.setText("Ngày hoàn thành:");

        txtNgayHT.setPreferredSize(new java.awt.Dimension(71, 30));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel9.setText("Tìm kiếm:");

        txtTimSP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimSPKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout panelDSSSPLayout = new javax.swing.GroupLayout(panelDSSSP);
        panelDSSSP.setLayout(panelDSSSPLayout);
        panelDSSSPLayout.setHorizontalGroup(
            panelDSSSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelDSSSPLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelDSSSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelDSSSPLayout.createSequentialGroup()
                        .addGroup(panelDSSSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel11)
                            .addComponent(lblSoCD))
                        .addGap(27, 27, 27)
                        .addGroup(panelDSSSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtSoCD, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panelDSSSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtSLSP, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
                                .addComponent(txtTenSP, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtMaSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))))
                    .addGroup(panelDSSSPLayout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNgayHT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelDSSSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 313, Short.MAX_VALUE)
                    .addGroup(panelDSSSPLayout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTimSP, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelDSSSPLayout.setVerticalGroup(
            panelDSSSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDSSSPLayout.createSequentialGroup()
                .addGroup(panelDSSSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtMaSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(txtTimSP, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelDSSSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDSSSPLayout.createSequentialGroup()
                        .addGroup(panelDSSSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txtTenSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelDSSSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(txtSLSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelDSSSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSoCD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSoCD))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelDSSSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(txtNgayHT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        dscdModel = new DefaultTableModel(new String [] {
            "Mã công đoạn", "Tên công đoạn", "Số lượng", "Giá","Số thứ tự", "Trạng thái"
        }, 0){

            boolean[] canEdit = new boolean[]{
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        };
        tableDSCD.setModel(dscdModel);
        tableDSCD.setMaximumSize(new java.awt.Dimension(525, 0));
        tableDSCD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableDSCDMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tableDSCD);

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Tạo Công Đoạn");

        btnThem.setBackground(new java.awt.Color(255, 204, 204));
        btnThem.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnThem.setText("Thêm");
        btnThem.setMaximumSize(new java.awt.Dimension(106, 30));
        btnThem.setMinimumSize(new java.awt.Dimension(106, 30));
        btnThem.setPreferredSize(new java.awt.Dimension(106, 30));
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnLuu.setBackground(new java.awt.Color(255, 204, 204));
        btnLuu.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnLuu.setText("Lưu");
        btnLuu.setMaximumSize(new java.awt.Dimension(106, 30));
        btnLuu.setMinimumSize(new java.awt.Dimension(106, 30));
        btnLuu.setPreferredSize(new java.awt.Dimension(106, 30));
        btnLuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuuActionPerformed(evt);
            }
        });

        btnSua.setBackground(new java.awt.Color(255, 204, 204));
        btnSua.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnSua.setText("Sửa");
        btnSua.setMaximumSize(new java.awt.Dimension(106, 30));
        btnSua.setMinimumSize(new java.awt.Dimension(106, 30));
        btnSua.setPreferredSize(new java.awt.Dimension(106, 30));
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setBackground(new java.awt.Color(0, 153, 0));
        btnXoa.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.setMaximumSize(new java.awt.Dimension(106, 30));
        btnXoa.setMinimumSize(new java.awt.Dimension(106, 30));
        btnXoa.setPreferredSize(new java.awt.Dimension(106, 30));
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnThoat.setBackground(new java.awt.Color(0, 153, 0));
        btnThoat.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnThoat.setText("Thoát");
        btnThoat.setMaximumSize(new java.awt.Dimension(106, 30));
        btnThoat.setMinimumSize(new java.awt.Dimension(106, 30));
        btnThoat.setPreferredSize(new java.awt.Dimension(106, 30));
        btnThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThoatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(476, 476, 476)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panelDSSSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(panelThongTin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 808, Short.MAX_VALUE)
                        .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnLuu, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(74, 74, 74))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnThoat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(118, 118, 118))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel10)
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panelDSSSP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelThongTin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLuu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnThoat, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(34, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tableDSSPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableDSSPMouseClicked
        removeAllDSCD();
        if (btnThem.getText().trim().equalsIgnoreCase("Thêm")) {
            xoaTrangCD();
        }
        napDLVaoTFSP();
    }//GEN-LAST:event_tableDSSPMouseClicked

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        if (btnThem.getText().trim().equalsIgnoreCase("Thêm")) {
            int r = tableDSSP.getSelectedRow();
            if (r == -1) {
                sh_Mes("Chưa chọn sản phẩm", null);
                return;
            }
            int cdSP = dsSP.get(r).getSoCongDoan();
            int soCD = dscdModel.getRowCount();
            if (soCD >= cdSP) {
                sh_Mes("Đã đủ " + cdSP + " công đoạn", null);
                return;
            }
            moKhoaTextfields(true);
            moKhoaControls(false);
            btnLuu.setEnabled(true);
            btnThem.setEnabled(true);
            btnThem.setText("Hủy");
            xoaTrangCD();
            txtMaSanPhamCD.setText(txtMaSanPham.getText());
            txtSoLuongCD.setText(txtSLSP.getText());
            txtMaCongDoan.setText(taoMaMoi());
            tableDSCD.setEnabled(false);
            tableDSSP.setEnabled(false);
            spinTTModel.setMaximum(cdSP);
        } else if (btnThem.getText().trim().equalsIgnoreCase("Hủy")) {
            moKhoaTextfields(false);
            moKhoaControls(true);
            btnLuu.setEnabled(false);
            btnThem.setText("Thêm");
            xoaTrangCD();
            tableDSCD.setEnabled(true);
            tableDSSP.setEnabled(true);
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnLuuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuuActionPerformed
        if (btnThem.getText().trim().equalsIgnoreCase("Hủy")) {
            if (themCongDoan()) {
                moKhoaTextfields(false);
                moKhoaControls(true);
                btnLuu.setEnabled(false);
                btnThem.setText("Thêm");
                tableDSCD.setEnabled(true);
                tableDSSP.setEnabled(true);
            }
        }
        if (btnSua.getText().trim().equalsIgnoreCase("Hủy")) {
            if (suaCongDoan()) {
                moKhoaTextfields(false);
                moKhoaControls(true);
                btnLuu.setEnabled(false);
                btnSua.setText("Sửa");
                tableDSSP.setEnabled(true);
            }
        }
    }//GEN-LAST:event_btnLuuActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        if (btnSua.getText().trim().equalsIgnoreCase("Sửa")) {
            if (tableDSSP.getSelectedRow() == -1) {
                sh_Mes("Chưa chọn sản phẩm", null);
                return;
            }
            int r = tableDSCD.getSelectedRow();
            if (r == -1) {
                sh_Mes("Chọn công đoạn cần sửa", null);
                return;
            }
            moKhoaTextfields(true);
            moKhoaControls(false);
            btnLuu.setEnabled(true);
            btnSua.setEnabled(true);
            btnSua.setText("Hủy");
            xoaTrangCD();
            napDLVaoTFCD();

            int cdSP = dsSP.get(r).getSoCongDoan();
            spinTTModel.setMaximum(cdSP);
            tableDSSP.setEnabled(false);
        } else if (btnSua.getText().trim().equalsIgnoreCase("Hủy")) {
            moKhoaTextfields(false);
            moKhoaControls(true);
            btnLuu.setEnabled(false);
            btnSua.setText("Sửa");
            xoaTrangCD();
            tableDSSP.setEnabled(true);
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        xoaCongDoan();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void tableDSCDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableDSCDMouseClicked
        napDLVaoTFCD();
    }//GEN-LAST:event_tableDSCDMouseClicked

    private void btnThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThoatActionPerformed
        MenuChinh.getPnSlider().removeAll();
        MenuChinh.getPnSlider().repaint();
        MenuChinh.getPnSlider().revalidate();

        MenuChinh.getPnSlider().add(new pnManHinhChinh());
        MenuChinh.getPnSlider().repaint();
        MenuChinh.getPnSlider().revalidate();
        
    }//GEN-LAST:event_btnThoatActionPerformed

    private void tableDSSPMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableDSSPMousePressed
        removeAllDSCD();
        if (btnThem.getText().trim().equalsIgnoreCase("Thêm")) {
            xoaTrangCD();
        }
        napDLVaoTFSP();
    }//GEN-LAST:event_tableDSSPMousePressed

    private void txtTimSPKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimSPKeyReleased
        String tenSP = txtTimSP.getText().trim();
        if (!tenSP.trim().equals("")) {
            removeAllDSSP();
            tenSP = tenSP.replace("*", ".*");
            tenSP = tenSP.replaceAll("\\s\\s+", " ");
            String regex = String.format(".*%s.*", tenSP);
            Pattern mypattern = Pattern.compile(regex, (Pattern.UNICODE_CASE | Pattern.CASE_INSENSITIVE));
            Matcher mymatcher;
            for (SanPham sp : dsSP) {
                mymatcher = mypattern.matcher(sp.getTenSP());
                if (mymatcher.matches()) {
                    dsspModel.addRow(new Object[]{sp.getTenSP(), sp.getSoLuong()});
                }
            }
        } else {
            removeAllDSSP();
            docDLVaoTableSP();
        }
    }//GEN-LAST:event_txtTimSPKeyReleased

    private CongDoan ktra_LayDL() {
        String maSP = txtMaSanPhamCD.getText();
        String maCD = txtMaCongDoan.getText();
        String tenCD = txtTenCongDoan.getText();
        int soLuong = Integer.parseInt(txtSoLuongCD.getText());
        String gia_S = txtGiaCD.getText();
        int thuTu = Integer.parseInt(spinTTModel.getValue().toString());

        if (tenCD.trim().equals("")) {
            sh_Mes("Tên công đoạn trống", txtTenCongDoan);
            return null;
        }

        if (!tenCD.matches("(\\p{L}|\\w|\\s)*")) {
            sh_Mes("Tên công đoạn chứa kí tự đặc biệt", txtTenCongDoan);
            return null;
        }

        if (gia_S.trim().equals("")) {
            sh_Mes("Giá sản phẩm trống", txtGiaCD);
            return null;
        }
        double gia = Double.parseDouble(gia_S);
        if (gia <= 0) {
            sh_Mes("Giá phải > 0", txtGiaCD);
            return null;
        }

        return new CongDoan(maCD, tenCD, gia, soLuong, thuTu, false, new SanPham(maSP));
    }

    private boolean xoaCongDoan() {
        int r = tableDSCD.getSelectedRow();
        if (r == -1) {
            sh_Mes("Chọn dòng cần xóa", null);
            return false;
        }
        int opt = JOptionPane.showConfirmDialog(null, "Xác nhận", "Muốn xóa", JOptionPane.YES_NO_OPTION);
        if (opt == JOptionPane.YES_OPTION) {
            congDoan_DAO.xoaCongDoan(dscdModel.getValueAt(r, 0).toString());
            dscdModel.removeRow(r);
            xoaTrangCD();
            return true;
        }
        return false;
    }

    private boolean suaCongDoan() {
        int r = tableDSCD.getSelectedRow();
        if (r == -1) {
            sh_Mes("Chọn dòng cần sửa", null);
            return false;
        }
        CongDoan cd = ktra_LayDL();
        if (cd == null) {
            return false;
        }
        dscdModel.removeRow(r);
        dscdModel.addRow(new Object[]{cd.getMaCD(), cd.getTenCD(), cd.getSoLuong(), cd.getGia(), cd.getThuTu(), (cd.isTrangThai() ? "Hoàn thành" : "Chưa hoàn thành")});
        congDoan_DAO.suaCongDoan(cd);
        xoaTrangCD();
        sh_Mes("Sửa thành công", null);
        return true;
    }

    private boolean themCongDoan() {
        CongDoan cd = ktra_LayDL();
        if (cd == null) {
            return false;
        }
        DateTimeFormatter fmt = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        dscdModel.addRow(new Object[]{cd.getMaCD(), cd.getTenCD(), cd.getSoLuong(), cd.getGia(), cd.getThuTu(), (cd.isTrangThai() ? "Hoàn thành" : "Chưa hoàn thành")});
        congDoan_DAO.themCongDoan(cd);
        xoaTrangCD();
        sh_Mes("Thêm thành công", null);
        return true;
    }

    private void moKhoaControls(boolean b) {
        btnThem.setEnabled(b);
        btnSua.setEnabled(b);
        btnLuu.setEnabled(b);
        btnXoa.setEnabled(b);
        btnThoat.setEnabled(b);
    }

    private void moKhoaTextfields(boolean b) {
        txtTenCongDoan.setEditable(b);
        txtGiaCD.setEditable(b);
//        spinSTT.setEnabled(b);
    }

    private void moKhoaTFSP(boolean b) {
        txtMaSanPham.setEditable(b);
        txtTenSP.setEditable(b);
        txtSoCD.setEditable(b);
        txtSLSP.setEditable(b);
        txtNgayHT.setEditable(b);
    }

    private void xoaTrangCD() {
        txtMaSanPhamCD.setText("");
        txtMaCongDoan.setText("");
        txtTenCongDoan.setText("");
        txtSoLuongCD.setText("");
        txtGiaCD.setText("");
        spinTTModel.setValue(1);
    }

    private void xoaTrangSP() {
        txtMaSanPham.setText("");
        txtTenSP.setText("");
        txtSLSP.setText("");
        txtSoCD.setText("");
        txtNgayHT.setText("");
    }

    private void napDLVaoTFCD() {
        int r = tableDSCD.getSelectedRow();
        if (r == -1) {
            return;
        }
        txtMaSanPhamCD.setText(txtMaSanPham.getText());
        txtMaCongDoan.setText(dscdModel.getValueAt(r, 0).toString());
        txtTenCongDoan.setText(dscdModel.getValueAt(r, 1).toString());
        txtSoLuongCD.setText(dscdModel.getValueAt(r, 2).toString());
        txtGiaCD.setText(dscdModel.getValueAt(r, 3).toString());
        int i = Integer.parseInt(dscdModel.getValueAt(r, 4).toString());
        spinTTModel.setValue(i);
    }

    private void napDLVaoTFSP() {
        int r = tableDSSP.getSelectedRow();
        if (r == -1) {
            sh_Mes("Chưa chọn", null);
            return;
        }
        SanPham sp = dsSP.get(r);
        txtMaSanPham.setText(sp.getMaSP());
        txtTenSP.setText(sp.getTenSP());
        txtSLSP.setText(sp.getSoLuong() + "");
        txtSoCD.setText(sp.getSoCongDoan() + "");
        DateTimeFormatter fmt = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        txtNgayHT.setText(fmt.format(sp.getNgayHoanThanh()));
        docDLVaoTableCD(sp.getMaSP());
    }

    private void sh_Mes(String mes, JTextField txt) {
        JOptionPane.showMessageDialog(null, mes);
        if (txt == null) {
            return;
        }
        txt.requestFocus();
    }

    public LocalDate convertToLocalDateViaInstant(Date dateToConvert) {
        return dateToConvert.toInstant()
                .atZone(ZoneId.systemDefault())
                .toLocalDate();
    }

    public LocalDate convertToLocalDateViaInstant(java.util.Date dateToConvert) {
        return dateToConvert.toInstant()
                .atZone(ZoneId.systemDefault())
                .toLocalDate();
    }

    public java.util.Date convertToDateViaInstant(LocalDate date) {
        return Date.from(date.atStartOfDay().atZone(ZoneId.systemDefault()).toInstant());
    }

    private void docDLVaoTableCD(String maSP) {
        ArrayList<CongDoan> dsCD = congDoan_DAO.getAllCongDoanTheoMaSP(maSP);
        Collections.sort(dsCD, (o1, o2) -> o1.getThuTu() - o2.getThuTu());
        for (CongDoan cd : dsCD) {
            dscdModel.addRow(new Object[]{cd.getMaCD(), cd.getTenCD(), cd.getSoLuong(), cd.getGia(), cd.getThuTu(), (cd.isTrangThai() ? "Hoàn thành" : "Chưa hoàn thành")});
        }
    }

    private void docDLVaoTableCD() {
        ArrayList<CongDoan> dsCD = congDoan_DAO.getAllCongDoan();
        for (CongDoan cd : dsCD) {
            dscdModel.addRow(new Object[]{cd.getMaCD(), cd.getTenCD(), cd.getSoLuong(), cd.getGia(), cd.getThuTu(), (cd.isTrangThai() ? "Hoàn thành" : "Chưa hoàn thành")});
        }
    }

    private void docDLVaoTableSP() {
        for (SanPham sp : dsSP) {
            dsspModel.addRow(new Object[]{sp.getTenSP(), sp.getSoLuong()});
        }
    }

    public String taoMaMoi() {
        String maCuoi = null;
        int maSP = Integer.parseInt(txtMaSanPham.getText().trim().substring(2, 6));
        try {
            maCuoi = congDoan_DAO.getMaNVCuoi(txtMaSanPham.getText().trim()).trim().substring(6);
        } catch (Exception e) {
            if (maCuoi == null) {
                return String.format("CD%04d%02d", maSP, 1);
            }
        }

        int ma = Integer.parseInt(maCuoi);
        String maMoi = String.format("CD%04d%02d", maSP, ma + 1);
        return maMoi;
    }

    private void removeAllDSCD() {
        DefaultTableModel model = (DefaultTableModel) tableDSCD.getModel();
        model.setRowCount(0);
    }

    private void removeAllDSSP() {
        DefaultTableModel model = (DefaultTableModel) tableDSSP.getModel();
        model.setRowCount(0);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLuu;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnThoat;
    private javax.swing.JButton btnXoa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblSoCD;
    private javax.swing.JPanel panelDSSSP;
    private javax.swing.JPanel panelThongTin;
    private javax.swing.JSpinner spinSTT;
    private javax.swing.JTable tableDSCD;
    private javax.swing.JTable tableDSSP;
    private javax.swing.JTextField txtGiaCD;
    private javax.swing.JTextField txtMaCongDoan;
    private javax.swing.JTextField txtMaSanPham;
    private javax.swing.JTextField txtMaSanPhamCD;
    private javax.swing.JTextField txtNgayHT;
    private javax.swing.JTextField txtSLSP;
    private javax.swing.JTextField txtSoCD;
    private javax.swing.JTextField txtSoLuongCD;
    private javax.swing.JTextField txtTenCongDoan;
    private javax.swing.JTextField txtTenSP;
    private javax.swing.JTextField txtTimSP;
    // End of variables declaration//GEN-END:variables
}
